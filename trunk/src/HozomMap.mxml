<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	verticalScrollPolicy="off" horizontalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import com.hozom.map.HozomMapCaller;
			import mx.controls.Alert;
			import com.hozom.map.Floater;
			import mx.controls.Image;
			import com.hozom.map.HozomMapUtil;
			
			private var mapCaller:HozomMapCaller;
			
			[Embed(source="assets/add.png")]
			private const ICON_ADD:Class;
			
			[Embed(source="assets/dot.png")]
			private const ICON_DOT:Class;
			
			[Embed(source="assets/flashdot.png")]
			private const ICON_FLASHDOT:Class;
			
			[Embed(source="assets/head.png")]
			private const ICON_HEAD:Class;
			
			[Embed(source="assets/headpop.png")]
			private const ICON_HEADPOP:Class;
			
			[Embed(source="assets/people.png")]
			private const ICON_PEOPLE:Class;
			
			[Embed(source="assets/popnew.png")]
			private const ICON_POPNEW:Class;
			
			[Embed(source="assets/report.png")]
			private const ICON_REPORT:Class;
			
			[Embed(source="assets/search.png")]
			private const ICON_SEARCH:Class;
			
			[Embed(source="assets/searchpop.png")]
			private const ICON_SEARCHPOP:Class;
			
			public function addContact(long:Number, lat:Number):int
			{
				var floater:Floater = createImageFloater(long, lat, -3.5, -3.5, ICON_DOT);
				floater.type = HozomMapUtil.CONTACT_TYPE;
				this.addChild(floater.disObj);
				return mapCaller.addFloater(floater);
			}
			
			public function addHozomUser(long:Number, lat:Number):int
			{
				var floater:Floater = createImageFloater(long, lat, -3.5, -3.5, ICON_HEAD);
				floater.type = HozomMapUtil.HOZOM_USER_TYPE;
				
				floater.data = new Object();
				var of:Floater = createAttachedImageFloater(floater, -6, -29, ICON_POPNEW);
				var pf:Floater = createAttachedImageFloater(floater, 4, -41, ICON_HEADPOP);
				floater.data[HozomMapUtil.FLOATER_ONLINE_KEY] = of;
				floater.data[HozomMapUtil.FLOATER_POP_KEY] = pf;
				
				this.addChild(floater.disObj);
				
				return mapCaller.addFloater(floater);
			}
			
			public function addSearchedCity(long:Number, lat:Number):int
			{
				var floater:Floater = createImageFloater(long, lat, -10, -10, ICON_FLASHDOT);
				floater.type = HozomMapUtil.SEARCHED_CITY_TYPE;
				
				floater.data = new Object();
				var pf:Floater = createAttachedImageFloater(floater, -51, -50, ICON_SEARCHPOP);
				floater.data[HozomMapUtil.FLOATER_POP_KEY] = pf;
				
				this.addChild(floater.disObj);
				
				return mapCaller.addFloater(floater);
			}
			
			public function showOnline(hozomUserId:int) : void
			{
				showOrHideAttachedFloater(hozomUserId, HozomMapUtil.HOZOM_USER_TYPE, HozomMapUtil.FLOATER_ONLINE_KEY, true);
			}
			
			public function hideOnline(hozomUserId:int) : void
			{
				showOrHideAttachedFloater(hozomUserId, HozomMapUtil.HOZOM_USER_TYPE, HozomMapUtil.FLOATER_ONLINE_KEY, false);
			}
			
			public function showHozomUserInfo(hozomUserId:int) : void
			{
				showOrHideAttachedFloater(hozomUserId, HozomMapUtil.HOZOM_USER_TYPE, HozomMapUtil.FLOATER_POP_KEY, true);
			}
			
			public function hideHozomUserInfo(hozomUserId:int) : void
			{
				showOrHideAttachedFloater(hozomUserId, HozomMapUtil.HOZOM_USER_TYPE, HozomMapUtil.FLOATER_POP_KEY, false);
			}
			
			public function showSearchedCityInfo(searchedCityId:int) : void
			{
				showOrHideAttachedFloater(searchedCityId, HozomMapUtil.SEARCHED_CITY_TYPE, HozomMapUtil.FLOATER_POP_KEY, true);
			}
			
			public function hideSearchedCityInfo(searchedCityId:int) : void
			{
				showOrHideAttachedFloater(searchedCityId, HozomMapUtil.SEARCHED_CITY_TYPE, HozomMapUtil.FLOATER_POP_KEY, false);
			}
			
			//public function add
			
			private function initAmmap():void
			{
				mapCaller = new HozomMapCaller();
				mapCaller.initListener();
			}
			
			private function createImageFloater(long:Number, lat:Number, xOffset:Number, yOffset:Number, source:Class):Floater
			{
				var img:Image = new Image();
				var mcX:Number = mapCaller.getMcXByLong(long);
				var mcY:Number = mapCaller.getMcYByLat(lat);
				img.x = mapCaller.getXByLong(long) + xOffset;
				img.y = mapCaller.getYByLat(lat) + yOffset;
				img.source = source;
				
				return new Floater(long, lat, mcX, mcY, xOffset, yOffset, img);
			}
			
			private function createAttachedImageFloater(host:Floater, xOffset:Number, yOffset:Number, source:Class) : Floater
			{
				var img:Image = new Image();
				img.source = source;
				img.visible = false;
				img.x = host.disObj.x + xOffset;
				img.y = host.disObj.y + yOffset;
				return new Floater(0, 0, 0, 0, xOffset, yOffset, img);
			}
			
			private function showOrHideAttachedFloater(id:int, floaterType:String, key:String, visible:Boolean):void
			{
				var floater:Floater = mapCaller.findFloaterById(id);
				if (floater == null || floater.type != floaterType)
				{
					return;
				}
			
				var of:Floater = Floater(floater.data[key]);
				if (of.disObj.visible != visible)
				{
					if (visible)
					{
						this.addChild(of.disObj);
					}
					else
					{
						this.removeChild(of.disObj);
					}
					
					of.disObj.visible = visible;
				}
			}
		]]>
	</mx:Script>
	<mx:SWFLoader id="hozomAmmap" source="ammap.swf?flashId=hozomAmmap" creationComplete="initAmmap();" />
</mx:Canvas>
